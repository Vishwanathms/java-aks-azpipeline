name: Install Terraform on agent
trigger:
  - UAT

parameters:
- name: createdestroy
  type: string 
  default: 'apply'

- name: poolname
  type: string 
  default: 'Azure Pipelines'

stages:
- stage: INstall_Terraform  
  jobs:
  - job: INstall_Terraform 
    displayName: Agent job 1
    pool:
      name: ${{ parameters.poolname }}
    steps:
    - script: |
        if command -v terraform &> /dev/null; then
          echo "Terraform is installed"
        else
          sudo apt update -y
          sudo apt install unzip -y 
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common -y
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update -y
          sudo apt-get install terraform -y
        fi
      displayName: 'Command Line Script'

- stage: Validate_Terraform
  jobs:
  - job: Validate_Terraform
    displayName: Agent job 3
    pool:
      #name: Azure Pipelines
      name: ${{ parameters.poolname }}
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Init
      inputs:
        backendServiceArm: 'azure-rg-vishwaawsac'
        backendAzureRmResourceGroupName: 'docker-app-vishwa_group'
        backendAzureRmStorageAccountName: vishwa2024tfstate
        backendAzureRmContainerName: tfstatefiles
        backendAzureRmKey: uat-vm-agent.tfstate
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: validate
      inputs:
        command: validate
        environmentServiceNameAzureRM: 'azure-rg-vishwaawsac'
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf

- stage: Apply_Terraform
  dependsOn: Validate_Terraform
  jobs:
  - job: Plan_Terraform 
    displayName: Agent job 4
    #timeoutInMinutes: 5
    pool:
      #name: Azure Pipelines
      name: ${{ parameters.poolname }}    
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Init
      inputs:
        backendServiceArm: 'azure-rg-vishwaawsac'
        backendAzureRmResourceGroupName: 'docker-app-vishwa_group'
        backendAzureRmStorageAccountName: vishwa2024tfstate
        backendAzureRmContainerName: tfstatefiles
        backendAzureRmKey: uat-vm-agent.tfstate
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Plan
      inputs:
        command: plan
        #commandOptions: '-var client_id=${{ parameters.clients_id }}  -var client_secret=${{ parameters.clients_secret }}'
        environmentServiceNameAzureRM: 'azure-rg-vishwaawsac'
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Apply Or Destroy
      inputs:
        command: ${{ parameters.createdestroy }}
        #commandOptions: '-var client_id=${{ parameters.clients_id }}  -var client_secret=${{ parameters.clients_secret }}'
        environmentServiceNameAzureRM: 'azure-rg-vishwaawsac'
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf
