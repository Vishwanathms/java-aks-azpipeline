name: Install Terraform on agent
trigger:
  - UAT

parameters:
- name: createdestroy
  type: string 
  default: 'apply'

- name: poolname
  type: string 
  default: 'Azure Pipelines'

- name: admin_username
  type: string 
  default: 'azureuser'

- name: vm_pwd
  type: string 

- name: SONAR_TOKEN
  type: string 

stages:
- stage: SonarCloud 
  jobs:
  - job: Code_Analysis 
    displayName: Agent job 1
    pool:
      name: ${{ parameters.poolname }}
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud-conn'
        organization: 'vishwacloudlab2024'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'vishwacloudlab_capstone-proj'
        cliProjectName: 'capstone-proj'
        cliSources: '$(Build.SourcesDirectory)/infra-pre-requiste-tf/'


- stage: Install_Terraform  
  jobs:
  - job: Install_Terraform 
    displayName: Agent job 1
    pool:
      name: ${{ parameters.poolname }}
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
    - script: |
        if command -v terraform &> /dev/null; then
          echo "Terraform is installed"
        else
          sudo apt update -y
          sudo apt install unzip -y 
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common -y
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update -y
          sudo apt-get install terraform -y
        fi
      displayName: 'Command Line Script'
      

- stage: Infra_Pre_Validate_Tf
  jobs:
  - job: Infra_Pre_Validate_Tf
    displayName: Infra_Pre_Validate_Tf
    pool:
      #name: Azure Pipelines
      name: ${{ parameters.poolname }}
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Init
      inputs:
        backendServiceArm: 'vcl-SP-conn'
        backendAzureRmResourceGroupName: 'docker-app-vishwa_group'
        backendAzureRmStorageAccountName: vishwa2024tfstate
        backendAzureRmContainerName: tfstatefiles
        backendAzureRmKey: uat-vm-agent.tfstate
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: validate
      inputs:
        command: validate
        environmentServiceNameAzureRM: 'vcl-SP-conn'
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf

- stage: Infra_Pre_Apply_Tf
  dependsOn: Infra_Pre_Validate_Tf
  jobs:
  - job: Infra_Pre_Apply_Tf
    displayName: Job_3
    #timeoutInMinutes: 5
    pool:
      #name: Azure Pipelines
      name: ${{ parameters.poolname }}    
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Init
      inputs:
        backendServiceArm: 'vcl-SP-conn'
        backendAzureRmResourceGroupName: 'docker-app-vishwa_group'
        backendAzureRmStorageAccountName: vishwa2024tfstate
        backendAzureRmContainerName: tfstatefiles
        backendAzureRmKey: uat-vm-agent.tfstate
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Plan
      inputs:
        command: plan
        commandOptions: '-var admin_username=${{ parameters.admin_username }}  -var vm_pwd=${{ parameters.vm_pwd }}'
        environmentServiceNameAzureRM: 'vcl-SP-conn'
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
      displayName: Apply Or Destroy
      inputs:
        command: ${{ parameters.createdestroy }}
        commandOptions: '-var admin_username=${{ parameters.admin_username }}  -var vm_pwd=${{ parameters.vm_pwd }}'
        environmentServiceNameAzureRM: 'vcl-SP-conn'
        workingDirectory: $(Build.SourcesDirectory)/infra-pre-requiste-tf


